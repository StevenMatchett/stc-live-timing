{"version":3,"sources":["service/time.js","service/service.js","context/context.js","assets/traffic.svg","assets/trophy.svg","table.js","DriverTable.js","Modal.js","Dropdown.js","dotyTable.js","tourTable.js","LiveTiming.js","serviceWorker.js","index.js","context/reducer.js"],"names":["Time","clazz","name","time","number","rawTimes","car","fastestIndex","this","parseTime","parseFloat","isNaN","axios","require","getTiming","url","dispatch","a","get","res","lastMod","options","hour","minute","second","date","Date","Intl","DateTimeFormat","format","parser","DOMParser","doc","parseFromString","data","currentClass","maxNumberOfRuns","conesHit","numberOfRun","querySelectorAll","forEach","tr","querySelector","innerText","times","Array","prototype","slice","call","length","actualTimes","fastest","timeHtml","index","split","map","s","trim","push","raw","cones","bestTime","sort","b","type","runCount","maxRuns","StateContext","createContext","StateProvider","initialState","children","reducer","Provider","value","useReducer","useStateValue","useContext","_extends","Object","assign","target","i","arguments","source","key","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref","svgRef","title","props","id","x","y","viewBox","style","enableBackground","xmlSpace","ref","fill","d","points","ForwardRef","forwardRef","useStyles","makeStyles","table","minWidth","height","AutoXTable","showTour","rows","row","createData","topPaxtime","console","log","filter","entries","trophiesCount","Math","ceil","classes","position","Fragment","TableContainer","component","Paper","timeNeeded","toFixed","Table","className","aria-label","TableHead","TableRow","background","TableCell","width","color","align","em","TableBody","onClick","scope","cursor","toUpperCase","append","backgroundColor","includes","maxWidth","DriverTable","selected","overflow","marginLeft","tableLayout","getModalStyle","top","left","transform","theme","paper","palette","border","boxShadow","shadows","padding","spacing","DriverModal","React","useState","modalStyle","Modal","aria-labelledby","aria-describedby","open","onClose","formControl","margin","selectEmpty","marginTop","Dropdown","clazzes","dropdown","FormControl","InputLabel","Select","onChange","window","history","pushState","location","pathname","cl","MenuItem","TourTable","combinedTime","day1","day1FastestIndex","day1Best","paxMap","ss","fsp","as","bs","cs","ds","es","fs","gs","hs","hcs","ssr","ev","ssp","asp","bsp","csp","dsp","esp","fsf","sts","stx","str","stu","sth","ssc","smf","sm","ssm","xp","bp","cp","dp","ep","fp","hcr","am","bm","cm","dm","fm","fsae","km","ja","jb","jc","camc","camt","cams","reloadCountDown","getRaw","results","concat","runTime","substring","noviceTimes","getPax","paxClass","startsWith","LiveTiming","setData","setClasses","topPax","setTopPax","showDoty","showClassDoty","setNextRefresh","setShowTour","getData","promise","checkurl","search","val","replace","useEffect","fetchData","getTime","day1Results","tempMap","r","rawDay1","pax","paxDay1","classList","interval","setInterval","clearInterval","onpopstate","e","showHideTourText","toLowerCase","float","display","class","Boolean","hostname","match","ReactDOM","render","StrictMode","state","action","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1da38717.chunk.js","sourcesContent":["export class Time{\n    parseTime(time){\n        time = parseFloat(time,10);\n        if (isNaN(time)){\n            return 999;\n        } else {\n            return time;\n        }\n    }\n    constructor(clazz, name, time, number, rawTimes, car, fastestIndex){\n        this.clazz = clazz;\n        this.name = name;\n        this.time = this.parseTime(time);\n        this.number = number;\n        this.rawTimes = rawTimes;\n        this.car = car;\n        this.fastestIndex = fastestIndex;\n    }\n}","import {Time} from './time';\n\nconst axios = require('axios');\n\nexport const getClassResults = async(url) => {\n    let res = await axios.get(url);\n    let parser = new DOMParser();\n    let doc = parser.parseFromString(res.data.contents, \"text/html\");\n    let data = {}\n    let currentClass = null;\n    doc.querySelectorAll(\"table:nth-child(9) > tbody > tr\").forEach(tr=>{\n        if (tr.querySelector(\"th\")){\n            currentClass = tr.querySelector(\"th > a\").name;\n            return;\n        }\n        \n        let trs = tr.querySelectorAll('td');\n        trs = Array.prototype.slice.call(trs);\n        let name = trs[1].innerText;\n\n        trs = trs.slice(4);\n        \n        let points = trs.map(point=> parseFloat(point.innerText));\n        points = points.filter(a=>!isNaN(a)).sort((a,b)=> b-a).slice(0,6);\n\n\n        let lowTime = 0;\n        if (points.length > 5){\n            lowTime = points[5];\n        }\n        if (!data[currentClass]){\n            data[currentClass] = {}\n        }\n        data[currentClass][name] = {name:name, lowTime: lowTime, totalTimes: points.length, points:points}\n\n    })\n\n    return data; \n}\n\nexport const getDOTY = async (url, dispatch) => {\n    let res = await axios.get(url);\n    let parser = new DOMParser();\n    let doc = parser.parseFromString(res.data.contents, \"text/html\");\n    let data = {}\n    let startSkipping = false;\n    doc.querySelectorAll(\"body > table:nth-child(6) > tbody > tr\").forEach(tr=>{\n        if (startSkipping){return}\n        let trs = tr.querySelectorAll('td');\n        trs = Array.prototype.slice.call(trs);\n        let name = trs[1].innerText;\n        trs = trs.slice(4);\n        \n        let points = trs.map(point=> parseFloat(point.innerText));\n        points = points.filter(a=>!isNaN(a));\n        startSkipping = points.length < 5 ? true : false;\n\n        if (startSkipping){return}\n\n        points = points.sort((a,b)=> b-a);\n        points = points.slice(0,6)\n\n        let lowTime = 0;\n        if (points.length > 5){\n            lowTime = points[5];\n        }\n        data[name] = {name:name, lowTime: lowTime, totalTimes: points.length, points:points};\n\n    })\n\n    return data;\n};\n\nexport const getTiming = async (url, dispatch) => {\n    let res = await axios.get(url);\n    let lastMod = '';\n    if (res['headers']){\n        let options = {\n            hour: 'numeric', minute: 'numeric', second: 'numeric',\n          };\n\n        let date = new Date(res['headers']['last-modified'])\n        lastMod = new Intl.DateTimeFormat('en', options).format(date)\n    }\n    let parser = new DOMParser();\n    let doc = parser.parseFromString(res.data, \"text/html\");\n    \n    let data = {};\n    let currentClass = \"\";\n    let maxNumberOfRuns = 0;\n    let conesHit = 0;\n    let numberOfRun = 0;\n    doc.querySelectorAll(\"body > a > table:nth-child(4) > tbody > tr\").forEach(tr=> {\n        if (tr.querySelector(\"th\")){\n            currentClass = tr.querySelector(\"a\").name;\n            data[currentClass] = []\n        } else {\n            let clazz = tr.querySelector(\"td:nth-child(2)\").innerText;\n            let number = tr.querySelector(\"td:nth-child(3)\").innerText;\n            let name = tr.querySelector(\"td:nth-child(4)\").innerText;\n            let car = tr.querySelector(\"td:nth-child(5)\").innerText;\n            let times = Array.prototype.slice.call(tr.querySelectorAll(\"td:nth-child(n+7)\"));\n\n            times = times.slice(0,times.length-2);\n\n            let actualTimes = [];\n            let rawTimes = [];\n            let fastest = 999;\n            let fastestIndex = -1;\n            times.forEach((timeHtml,index) => {\n                if (index===0) return;\n                let time = timeHtml.innerText.split(\"+\").map(s=>s.trim());\n                rawTimes.push(timeHtml.innerText.trim());\n                if (time.length === 1){\n                    if (time[0] === \"\"){\n                        return;\n                    }\n                    let raw = parseFloat(time,10);\n                    actualTimes.push(raw);\n                    numberOfRun++;\n                    if (raw < fastest){\n                        fastest = raw;\n                        fastestIndex = index;\n                    }\n                } else if (time.length === 2) {\n                    if (time[1] === \"dnf\" || time[1] === \"dns\" ){\n                        actualTimes.push(999);\n                        return;\n                    }\n                    let cones = parseFloat(time[1],10);\n                    if (isNaN(cones)) cones = 0;\n                    let raw = parseFloat(time,10) + cones * 2;\n                    conesHit+= cones;\n                    numberOfRun++;\n                    actualTimes.push(raw);\n                    if (raw < fastest){\n                        fastest = raw;\n                        fastestIndex = index;\n                    }\n                }\n            });\n            let bestTime = actualTimes.sort((a,b)=>a-b)[0];\n            data[currentClass].push(new Time(clazz,name,bestTime, number, rawTimes, car, fastestIndex));\n            if (rawTimes.length > maxNumberOfRuns){\n                maxNumberOfRuns = rawTimes.length;\n            }\n        }\n    });\n\n    dispatch({type:\"RUNS_AND_CONES\", data:{conesHit:conesHit, runCount: numberOfRun, maxRuns: maxNumberOfRuns, lastMod: lastMod}})\n\n    \n    return data;\n}","import React, {createContext, useContext, useReducer} from 'react';\nexport const StateContext = createContext();\n\n\nexport const StateProvider = ({initialState, children, reducer}) =>(\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\nexport const useStateValue = () => useContext(StateContext);\n\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgTraffic = function SvgTraffic(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFA055\"\n    },\n    d: \"M467.862,512H44.138c-4.875,0-8.828-3.953-8.828-8.828v-17.655c0-4.875,3.953-8.828,8.828-8.828 h423.724c4.875,0,8.828,3.953,8.828,8.828v17.655C476.69,508.047,472.737,512,467.862,512z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFB45A\"\n    },\n    d: \"M269.3,0h-26.6c-7.819,0-14.707,5.143-16.928,12.64L88.276,476.69h335.448L286.228,12.64 C284.007,5.143,277.119,0,269.3,0z\"\n  }), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFEBBE\"\n    },\n    points: \"171.975,194.207 340.025,194.207 319.101,123.586 192.899,123.586  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFEBBE\"\n    },\n    points: \"119.662,370.759 392.338,370.759 371.413,300.138 140.587,300.138  \"\n  })), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFA055\"\n    },\n    points: \"219.055,35.31 292.945,35.31 287.714,17.655 224.286,17.655  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    style: {\n      fill: \"#FFA055\"\n    },\n    points: \"208.593,70.621 303.407,70.621 298.176,52.966 213.824,52.966  \"\n  })), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTraffic, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/traffic.60151115.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgTrophy = function SvgTrophy(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFA000\"\n    },\n    d: \"M373.333,256c-5.891,0-10.667-4.776-10.667-10.667c0-5.891,4.776-10.667,10.667-10.667 C432.214,234.596,479.93,186.881,480,128V42.667h-96c-5.891,0-10.667-4.776-10.667-10.667S378.109,21.333,384,21.333h106.667 c5.891,0,10.667,4.776,10.667,10.667v96C501.251,198.658,443.992,255.918,373.333,256z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFA000\"\n    },\n    d: \"M138.667,256c-70.658-0.082-127.918-57.342-128-128V32c0-5.891,4.776-10.667,10.667-10.667H128 c5.891,0,10.667,4.776,10.667,10.667S133.891,42.667,128,42.667H32V128c0.071,58.881,47.786,106.596,106.667,106.667 c5.891,0,10.667,4.776,10.667,10.667C149.333,251.224,144.558,256,138.667,256z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFA000\"\n    },\n    d: \"M322.709,425.131l-5.739-5.888C294.613,396.245,288.469,331.947,288,309.12 c-0.116-5.808-4.858-10.454-10.667-10.453h-42.667c-5.801-0.001-10.539,4.633-10.667,10.432 c-0.448,22.827-6.592,87.083-28.971,110.123l-5.739,5.888c-29.291,30.144-50.624,51.925-50.624,76.224 c0,5.891,4.776,10.667,10.667,10.667h213.333c5.891,0,10.667-4.776,10.667-10.667C373.333,477.035,352,455.253,322.709,425.131z\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#FFC107\"\n    },\n    d: \"M384,0H128c-5.891,0-10.667,4.776-10.667,10.667v170.667C118.333,257.499,179.834,319,256,320 c76.166-1,137.667-62.501,138.667-138.667V10.667C394.667,4.776,389.891,0,384,0z\"\n  }), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTrophy, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/trophy.2ab18cc2.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useStateValue } from './context/context';\nimport { ReactComponent as Cone } from './assets/traffic.svg'\nimport { ReactComponent as Trophy } from './assets/trophy.svg'\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 500, \n    },\n    height: \"35px\"\n  });\n\nfunction createData(name, number, time, clazz, rawTimes, car, fastestIndex) {\n  return { name, number, time, clazz, rawTimes, car, fastestIndex};\n}\n\nfunction getTrophycount(entries){\n    if (entries <= 3) return 1;\n    if (entries <= 6) return 2;\n    if (entries <= 9) return 3;\n\n    entries = entries - 9;\n\n    return Math.ceil(entries/4) + 3;\n}\n\nexport function AutoXTable(props) {\n\n    let { data, name, showTour } = props\n    const [{maxRuns}, dispatch] = useStateValue();\n    let rows = data.map(row => {\n        return createData(row.name, row.number, row.time, row.clazz, row.rawTimes, row.car, row.fastestIndex)\n    })\n\n\n\n    let topPaxtime = null;\n\n    if (rows && rows.length > 1 && name === 'PAX'){\n        topPaxtime = rows[0].time;\n    } else if (rows && name !== \"RAW\"){\n        topPaxtime = rows[0].time;\n    }\n    console.log('rows',rows);\n    rows = rows.filter(a=>{\n        return a.name;\n    })\n    let trophiesCount = 0;\n\n    if (name !== 'PAX' && name !== 'RAW'){\n        trophiesCount = getTrophycount(rows.length);\n    }\n    const classes = useStyles();\n    let position = 0;\n    return (\n        <React.Fragment>\n            \n            <TableContainer component={Paper}>\n                <div>\n                {name !== \"RAW\" && name !== \"PAX\" && <>Time to match top PAX: {props.timeNeeded.toFixed(3)}</>}\n                    <Table className={classes.table} aria-label=\"simple table\" >\n                        <TableHead >\n                            <TableRow style={{ background : \"gray\"}}>\n                                <TableCell style={{ width: 25, color:\"white\" }} align=\"left\">Position</TableCell>\n                                <TableCell style={{ color : \"white\"}} >Name</TableCell>\n                                <TableCell style={{ color : \"white\"}} align=\"left\">Number</TableCell>\n                                <TableCell style={{ color : \"white\"}} align=\"left\">Best</TableCell>\n                                <TableCell style={{ color : \"white\"}} align=\"left\">Diff</TableCell>\n                                \n                                { (new Array(maxRuns)).fill().map( (em, index) => {\n                                    return <TableCell style={{ color : \"white\"}} align=\"left\">{index+1}</TableCell>\n                                })}\n                                {topPaxtime && <TableCell style={{ color : \"white\"}} align=\"left\">DOTY Points</TableCell>}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.map((row,index) => {\n                                position++;\n                                return (\n                                <TableRow style ={ index % 2 ? { background : \"#f2f2f2\" }: {}    }>\n                                    <TableCell align=\"left\">{position <= trophiesCount  && <Trophy style={{height: \"10px\"}}/>} {position}</TableCell>\n                                    <TableCell onClick={()=>dispatch({type: \"SELECTED_DRIVER\", data: row})} component=\"th\" scope=\"row\">\n                                        <div style={{color:\"blue\", cursor: \"pointer\"}}>{row.name}</div>\n                                    </TableCell>\n                                    <TableCell align=\"left\">{row.number + \" \" + row.clazz.toUpperCase()}</TableCell>\n                                    <TableCell align=\"left\">{row.time}</TableCell>\n                                    <TableCell>{row && row.fastestIndex && row.rawTimes && \n                                        index === 0 || !rows[index-1] ? \"\" : (rows[index-1].time - row.time).toFixed(3)\n                                    }\n                                     </TableCell>\n                                   \n\n                                   \n                                    { (new Array(maxRuns)).fill().map( (em, index) => {\n                                        let append = <Cone style={{height: \"10px\"}}/>\n                                        let time = row.rawTimes.length > index ? row.rawTimes[index] : \"\";\n                                        if (row.fastestIndex-1 === index){\n                                            return <TableCell align=\"left\" style={{backgroundColor:\"lightgreen\"}}>{time} {time.includes('+') ? append : \"\"}</TableCell>\n                                        } else {\n                                            return <TableCell align=\"left\">{time} {time.includes('+') ? append : \"\"}</TableCell>\n                                        }\n\n                                    })}\n                                    {topPaxtime && <TableCell>{(topPaxtime/row.time*1000).toFixed(3)}</TableCell>}\n                                </TableRow>\n                            )})}\n                        </TableBody>\n                    </Table>\n                </div>\n            </TableContainer>\n        </React.Fragment>\n    );\n}\n","import React from 'react';\nimport { useStateValue } from './context/context'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 500,\n    maxWidth: 500,\n    width: 500\n  },\n\n});\n\n\nexport function DriverTable(props) {\n    const classes = useStyles();\n    const [{selected}, ] = useStateValue()\n    const {clazz, name, rawTimes, car, fastestIndex} = selected;\n    let position = 0;\n\n    return (\n        <React.Fragment>    \n            <TableContainer component={Paper}>\n                <div style={{ overflow: 'auto'}}>\n                    <h2 style={{ marginLeft: \"15px\" }}>{name} ({clazz.toUpperCase()})</h2>\n                    <h4 style={{ marginLeft: \"15px\" }}>{car}</h4>\n                    <Table className={classes.table} aria-label=\"simple table\" style={{tableLayout: 'fixed'}}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"left\">Run</TableCell>\n                                <TableCell align=\"left\">Time</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rawTimes.map((row, index) => {\n                                position++;\n                                return (\n                                <TableRow>\n                                    <TableCell align=\"left\">{position}</TableCell>\n                                    {fastestIndex+1 === position ?\n                                        <TableCell align=\"left\" style={{backgroundColor:\"lightgreen\"}}>{row}</TableCell>\n                                        :\n                                        <TableCell align=\"left\">{row}</TableCell>\n                                    }\n                                </TableRow>\n                            )})}\n                        </TableBody>\n                    </Table>\n                </div>\n            </TableContainer>\n        </React.Fragment>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport {DriverTable} from './DriverTable';\nimport { useStateValue } from './context/context';\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport const DriverModal = () => {\n    const [{selected}, dispatch] = useStateValue()\n    const classes = useStyles();\n    const [modalStyle] = React.useState(getModalStyle);\n\n    if (!selected){\n        return <div/>;\n    }\n    \n    return (\n    <div>\n        <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={ selected ? true : false }\n        onClose={()=>dispatch({ type: 'DESELECT_DRIVER'})}>\n            <div style={modalStyle} className={classes.paper}>\n                <DriverTable />\n            </div>\n        </Modal>\n    </div>\n    );\n    }","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { useStateValue } from './context/context'\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport const Dropdown = ({clazzes}) => {\n  const classes = useStyles();\n  const [{dropdown}, dispatch] = useStateValue();\n\n\n\n  return (\n      <FormControl className={classes.formControl}>\n        <InputLabel>Class</InputLabel>\n        <Select value={dropdown} onChange={(data)=>{\n            window.history.pushState(\"\", \"\", `${window.location.pathname}?class=${data.target.value}` );\n            dispatch({type:\"UPDATE_DROPDOWN\", data:data.target.value\n          })}}>\n            {clazzes.map(cl => {\n                return <MenuItem value={cl}>{cl.toUpperCase()}</MenuItem>\n            })}\n        </Select>\n      </FormControl>\n  );\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useStateValue } from './context/context';\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 500, \n    },\n    height: \"35px\"\n  });\n\nfunction createData(name, sum, lowest, currentEventScore,currentTime, clazz) {\n  return { name, sum, lowest, currentEventScore,currentTime, clazz};\n}\n\nfunction getNeedsToMoveUp(driver, above, topPax, paxMap){\n    if (!above){\n        return \"Lonely at the top Caleb\"\n    }\n    let diff = above.sum - driver.sum;\n\n    if (1000 < diff + driver.currentEventScore  ){\n        return \"Can't move up\"\n    } else if (!driver.currentEventScore){\n        return \"Can't move up if not running\"\n    } else {\n        if (driver.lowest !== driver.currentEventScore){\n            diff += driver.lowest - driver.currentEventScore \n        }\n        let pointsNeeded = ((parseFloat(driver.currentEventScore) + parseFloat(diff)))/1000 ;\n        return (topPax/paxMap[driver.clazz] / pointsNeeded).toFixed(3)        \n    }\n}\n\nexport function DotyTable(props) {\n    let { data, onClose} = props\n\n\n    let rows = data.map(row => {\n        return createData(row.name, row.sum, row.lowest, row.currentEventScore,row.currentTime, row.clazz)\n    })\n\n    const classes = useStyles();\n    let position = 0;\n\n    return (\n        <React.Fragment>    \n            <a href=\"#\" onClick={onClose} >Back</a>\n            <TableContainer component={Paper}>\n                <div>\n                    <Table className={classes.table} aria-label=\"simple table\" >\n                        <TableHead>\n                            <TableRow style={{ background : \"gray\"}}>\n                                <TableCell style={{ width: 25, color:\"white\" }} align=\"left\">Position</TableCell>\n                                <TableCell style={{ color : \"white\"}} >Name</TableCell>\n                                <TableCell style={{ color : \"white\"}} align=\"left\">Score</TableCell>\n                                <TableCell style={{ color : \"white\"}} align=\"left\">Lowest scored Event</TableCell>\n                                <TableCell style={{ color : \"white\"}} align=\"left\">Raw time need to move up</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.map((row,index) => {\n                                if (index === 0){\n                                    return (\n                                        <TableRow style ={ index % 2 ? { background : \"#f2f2f2\" }: {}    }>\n                                            <TableCell align=\"left\">DSQ</TableCell>\n                                            <TableCell  component=\"th\" scope=\"row\">\n                                                <div>{row.name}</div>\n                                            </TableCell>\n                                            <TableCell align=\"left\">{row.sum.toFixed(2)}</TableCell>\n                                            <TableCell align=\"left\">Disqualified for an illegal tune in HS</TableCell>\n                                            <TableCell align=\"left\"></TableCell>\n                                        </TableRow>\n                                    )\n                                }\n                                position++;\n                                return (\n                                <TableRow style ={ index % 2 ? { background : \"#f2f2f2\" }: {}    }>\n                                    <TableCell align=\"left\">{position}</TableCell>\n                                    <TableCell  component=\"th\" scope=\"row\">\n                                        <div>{row.name}</div>\n                                    </TableCell>\n                                    <TableCell align=\"left\">{row.sum.toFixed(2)}</TableCell>\n                                    <TableCell align=\"left\">{row.lowest}</TableCell>\n                                    <TableCell align=\"left\">{getNeedsToMoveUp(row, rows[index-1], props.topPax, props.paxMap)}</TableCell>\n                                   \n                                </TableRow>\n                            )})}\n                        </TableBody>\n                    </Table>\n                </div>\n            </TableContainer>\n        </React.Fragment>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useStateValue } from './context/context';\nimport { ReactComponent as Cone } from './assets/traffic.svg'\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 500, \n    },\n    height: \"35px\"\n  });\n\nfunction createData(name, number, time, clazz, rawTimes, car, fastestIndex, day1, combinedTime, day1FastestIndex, day1Best){\n  return { name, number, time, clazz, rawTimes, car, fastestIndex, day1, combinedTime, day1FastestIndex, day1Best};\n}\n\nexport function TourTable(props) {\n\n    let { data, name, showTour } = props\n    data = data.filter(d => d.combinedTime).sort((a,b)=>a.combinedTime - b.combinedTime);\n    \n    const [{maxRuns}, dispatch] = useStateValue();\n    \n    let rows = data.map(row => {\n        return createData(row.name, row.number, row.time, row.clazz, row.rawTimes, row.car, row.fastestIndex, row.day1, row.combinedTime, row.day1FastestIndex, row.day1Best)\n    })\n\n\n    let topPaxtime = null;\n    if (data.length !== 0){\n        if (rows && rows.length > 1 && name === 'PAX'){\n            topPaxtime = rows[0].time;\n        } else if (rows && name !== \"RAW\"){\n            topPaxtime = rows[0].time;\n        }\n    }\n    \n    const classes = useStyles();\n    let position = 0;\n    if (data.length === 0 ) {return <div/>}\n    return (\n        <React.Fragment>    \n            <TableContainer component={Paper}>\n                <div>\n                    <Table className={classes.table} aria-label=\"simple table\" >\n                        <TableHead >\n                            <TableRow style={{ background : \"gray\"}}>\n                                <TableCell style={{ width: 25, color:\"white\" }} align=\"left\">Position</TableCell>\n                                <TableCell style={{ color : \"white\"}} >Name</TableCell>\n                                <TableCell style={{ color : \"white\"}} align=\"left\">Number</TableCell>\n                                <TableCell style={{ color : \"white\"}} align=\"left\">Best</TableCell>\n                                <TableCell style={{ color : \"white\"}} align=\"left\">Diff</TableCell>\n                                \n                                { (new Array(maxRuns)).fill().map( (em, index) => {\n                                    return <TableCell style={{ color : \"white\"}} align=\"left\">{index+1}</TableCell>\n                                })}\n                                <TableCell style={{ color : \"white\"}} align=\"left\">Combined</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.map((row,index) => {\n                                position++;\n                                return (\n                                <>\n                                    <TableRow style ={ index % 2 ? { background : \"#f2f2f2\" }: {}    }>\n                                        <TableCell align=\"left\">{position}</TableCell>\n                                        <TableCell onClick={()=>dispatch({type: \"SELECTED_DRIVER\", data: row})} component=\"th\" scope=\"row\">\n                                            <div style={{color:\"blue\", cursor: \"pointer\"}}>{row.name}</div>\n                                        </TableCell>\n                                        <TableCell align=\"left\">{row.number + \" \" + row.clazz.toUpperCase()}</TableCell>\n\n                                        <TableCell align=\"left\">{row.day1Best}</TableCell>\n                                        <TableCell>{row && row.fastestIndex && row.rawTimes && \n                                            index === 0 || !rows[index-1] ? 0 : (rows[index-1].combinedTime - row.combinedTime).toFixed(3)\n                                        }\n                                        </TableCell>\n                                        \n                                    \n\n                                    \n                                        { (new Array(maxRuns)).fill().map( (em, index) => {\n                                            // if (row.day1FastestIndex === index){\n                                            //     return <TableCell align=\"left\" style={{backgroundColor:\"lightgreen\"}}>{row.day1.length > index ? row.day1[index] : \"\"}</TableCell>\n                                            // } else {\n                                            //     return <TableCell align=\"left\">{row.day1.length > index ? row.day1[index] : \"\"}</TableCell>\n                                            // }\n\n\n                                            let append = <Cone style={{height: \"10px\"}}/>\n                                            let time = row.day1.length > index ? row.day1[index] : \"\"\n                                            if (row.day1FastestIndex === index){\n                                                return <TableCell align=\"left\" style={{backgroundColor:\"lightgreen\"}}>{time} {time.includes('+') ? append : \"\"}</TableCell>\n                                            } else {\n                                                return <TableCell align=\"left\">{time} {time.includes('+') ? append : \"\"}</TableCell>\n                                            }\n\n                                        })}\n                                        <TableCell align=\"left\">{row.combinedTime.toFixed(3)}</TableCell>\n\n                                    </TableRow>\n\n\n                                    <TableRow style ={ index % 2 ? { background : \"#f2f2f2\" }: {}    }>\n                                        <TableCell align=\"left\"></TableCell>\n                                        <TableCell onClick={()=>dispatch({type: \"SELECTED_DRIVER\", data: row})} component=\"th\" scope=\"row\">\n                                            <div style={{color:\"blue\", cursor: \"pointer\"}}></div>\n                                        </TableCell>\n                                        <TableCell align=\"left\"></TableCell>\n                                        <TableCell align=\"left\">{row.time}</TableCell>\n                                        \n                                        <TableCell>{row && row.fastestIndex && row.rawTimes && \n                                          \"\"\n                                        }\n                                        </TableCell>\n\n                                    \n                                        { (new Array(maxRuns)).fill().map( (em, index) => {\n                                            let append = <Cone style={{height: \"10px\"}}/>\n                                            let time = row.rawTimes.length > index ? row.rawTimes[index] : \"\";\n                                            if (row.fastestIndex === index){\n                                                return <TableCell align=\"left\" style={{backgroundColor:\"lightgreen\"}}>{time} {time.includes('+') ? append : \"\"}</TableCell>\n                                            } else {\n                                                return <TableCell align=\"left\">{time} {time.includes('+') ? append : \"\"}</TableCell>\n                                            }\n\n                                        })}\n                                        <TableCell/>\n                                    </TableRow>\n                                </>\n                            )})}\n                        </TableBody>\n                    </Table>\n                </div>\n            </TableContainer>\n        </React.Fragment>\n    );\n}\n","import React, {useState, useEffect}  from 'react';\nimport {getTiming, getDOTY, getClassResults} from './service/service';\nimport {AutoXTable} from './table';\nimport './App.css';\nimport { Time } from './service/time';\nimport { DriverModal } from './Modal';\nimport { Dropdown } from './Dropdown';\nimport { DotyTable } from './dotyTable';\n// import { ClassDotyTable } from './classDotyTable'\nimport { useStateValue } from './context/context'\nimport { TourTable } from './tourTable';\nimport { ReactComponent as Cone } from './assets/traffic.svg'\n\nconst paxMap = {ss:0.823,fsp:0.825,as:0.821,bs:0.814,cs:.809,ds:.807,es:.793,fs:.806,gs:.794,hs:.782,hcs:.796,ssr:.843,\"xs-a\":.838,\"xs-b\":.856,ev:.826,ssp:.853,asp:.849,bsp:.852,csp:.865,dsp:.842,esp:.839,fsf:.825,sts:.811,stx:.816,str:.827,stu:.828,sth:.813,ssc:.812,smf:.841,sm:.854,ssm:.875,xp:.882,bp:.867,cp:.851,dp:.866,ep:.85,fp:.871,hcr:.815,am:1,bm:.962,cm:.893,dm:.895,em:.898,fm:.911,fsae:.963,km:.93,ja:.855,jb:.82,jc:.718,camc:.818,camt:.817,cams:.833,}\nlet reloadCountDown = 30;\n\nconst getRaw = (results) => {\n    const fixNovice = (times) => {\n        return times.map(time=>{\n            let runTime = time.time\n            let clazz = time.clazz.substring(1);\n            if (runTime!== 999){\n\n                runTime = (time.time / paxMap[clazz]).toFixed(3);\n            }\n            let noviceTimes = time.rawTimes.map(time=>{\n                time = time.split(\"+\")[0]\n                return (time/paxMap[clazz]).toFixed(3)\n            })\n            return new Time(time.clazz,time.name,runTime,time.number,noviceTimes, time.car, time.fastestIndex);\n        })\n    }\n\n    let raw = [];\n    Object.keys(results).forEach(clazz => {\n        if (clazz === 'n'){\n            raw = raw.concat(fixNovice(results[clazz]));\n        } else {\n            raw = raw.concat(results[clazz]);\n        }\n        \n    })\n    raw.sort((a,b)=> {\n        return a.time-b.time;\n    })\n    \n    return raw\n}\n\nconst getPax = (results) => {\n    const applyPax = (times, clazz) => {\n        return times.map(time=>{\n            let paxClass = time.clazz.startsWith('n') ? time.clazz.substring(1) : time.clazz;\n            return new Time(time.clazz,time.name,(time.time*paxMap[paxClass]).toFixed(3),time.number, time.rawTimes, time.car, time.fastestIndex);\n        })\n    }\n\n    let raw = [];\n    Object.keys(results).forEach(clazz => {\n        raw = raw.concat(applyPax(results[clazz],clazz));\n    })\n    raw.sort((a,b)=> {\n        return a.time-b.time;\n    })\n    \n    return raw\n}\n\n\n\nexport const LiveTiming = (props) =>{\n    const [data, setData] = useState();\n    const [classes, setClasses] = useState(\"\");\n    const [topPax, setTopPax] = useState(\"\");\n    const [dotyData, setDoty] = useState(null);\n    const [showDoty, setShowDoty] = useState(false)\n    const [showClassDoty, setShowClassDoty] = useState(false);\n    const [classDoty, setClassDoty] = useState(null);\n    const [nextRefresh, setNextRefresh] = useState(30);\n    const [showTour, setShowTour] = useState(false);\n\n    const getData = async (promise) => {\n        return await promise;\n    }\n\n    const checkurl = () => {\n        if (window.location.search && window.location.search.includes(\"?class=\")){\n            let val = window.location.search.replace(\"?class=\",\"\").trim();\n            if (Object.keys(paxMap).includes(val)){\n                dispatch({type:\"UPDATE_DROPDOWN\", data:val})\n            } else if (val === \"RAW\"){\n                dispatch({type:\"UPDATE_DROPDOWN\", data:val})\n            }\n        } else {\n            dispatch({type:\"UPDATE_DROPDOWN\", data: \"PAX\"})\n        }\n    }\n\n    const calculateDOTY = (dotyRes, pax) => {\n        pax.forEach(driver=>{\n            if (dotyRes[driver['name']]){\n                let currentPointsForEvent = (pax[0].time/driver.time*1000).toFixed(2);\n                dotyRes[driver['name']].clazz = driver.clazz\n                dotyRes[driver['name']].currentEventScore = currentPointsForEvent\n                dotyRes[driver['name']].currentTime = driver.time;\n                if (dotyRes[driver['name']].lowTime < currentPointsForEvent){\n                    if (dotyRes[driver['name']].totalTimes == 6){\n                        dotyRes[driver['name']].points.pop();\n                        dotyRes[driver['name']].points.push(currentPointsForEvent);\n                    } else {\n                        dotyRes[driver['name']].points.push(currentPointsForEvent);\n                    }\n                }\n                \n            }\n        })\n        const reducer = (accumulator, currentValue) => parseFloat(accumulator) + parseFloat(currentValue);\n\n        Object.keys(dotyRes).forEach(driver=>{\n            let lowest = 1001;\n            dotyRes[driver].points.forEach(po=>{\n                if (parseFloat(po) < lowest){\n                    lowest = parseFloat(po);\n                }\n            });\n            dotyRes[driver].sum = dotyRes[driver].points.reduce(reducer);\n            dotyRes[driver].lowest = lowest;\n        });\n\n        let arr = Object.keys(dotyRes).map(driver=>dotyRes[driver])\n        arr = arr.sort((a,b)=>{\n            return  b.sum - a.sum\n        })\n        setDoty(arr);\n    }\n\n    const [{dropdown, conesHit, runCount, lastMod}, dispatch] = useStateValue();\n    useEffect(() => {\n        async function fetchData() {\n            let results = await getData(getTiming(\"http://www.stcsolo.com/live/live.html?cache=\" + new Date().getTime(), dispatch));\n            console.log(results);\n            let day1Results = await getData(getTiming(\"http://www.stcsolo.com/live/results_live.htm?cache=\" + new Date().getTime(), dispatch));\n            // let dotyResults = await getData(getDOTY(\"https://api.allorigins.win/get?url=stcsolo.com/wp-content/uploads/2020/09/2020_event9_paxpoints_6scores.htm?cache=\" + new Date().getTime(), dispatch));\n            // let classResults = await getData(getClassResults(\"https://api.allorigins.win/get?url=stcsolo.com/wp-content/uploads/2020/10/2020membership__points.htm?cache=\" + new Date().getTime(), dispatch));\n            let tempMap = {};\n            Object.keys(results).forEach(clazz => {\n                if (!day1Results[clazz]) return;\n\n                tempMap = {};\n                day1Results[clazz].forEach( r=> {\n                    tempMap[r.name] = r;\n                })\n                \n                results[clazz] = results[clazz].map(r => {\n\n                    if (tempMap[r.name]){\n                        r['day1'] = tempMap[r.name]['rawTimes']\n                        r['combinedTime'] = r['time'] + tempMap[r.name]['time']\n                        r['day1FastestIndex'] = tempMap[r.name]['fastestIndex']\n                        r['day1Best'] = tempMap[r.name]['time']\n                    }\n                    return r;\n                })\n            })\n            \n            let raw = getRaw(results)\n            let rawDay1 = getRaw(day1Results)\n            tempMap = {};\n            rawDay1.forEach(r => {\n                tempMap[r.name] = r;\n            })\n            raw = raw.map(r => {\n\n                if (tempMap[r.name]){\n                    r['day1'] = tempMap[r.name]['rawTimes']\n                    r['combinedTime'] = r['time'] + tempMap[r.name]['time']\n                    r['day1FastestIndex'] = tempMap[r.name]['fastestIndex']\n                    r['day1Best'] = tempMap[r.name]['time']\n                }\n                return r;\n            })\n\n\n            let pax = getPax(results)\n            \n            let paxDay1 = getPax(day1Results)\n\n            tempMap = {};\n            paxDay1.forEach(r => {\n                tempMap[r.name] = r;\n            })\n\n            pax = pax.map(r => {\n\n                if (tempMap[r.name]){\n                    r['day1'] = tempMap[r.name]['rawTimes']\n                    r['combinedTime'] = r['time'] + tempMap[r.name]['time']\n                    r['day1FastestIndex'] = tempMap[r.name]['fastestIndex']\n                    r['day1Best'] = tempMap[r.name]['time']\n                }\n                return r;\n            })\n\n\n            results['RAW'] = raw;\n            results['PAX'] = pax;\n            setTopPax(results['PAX'][0].time)\n            setData(results);\n            let classList = Object.keys(results);\n            classList = [\"PAX\", \"RAW\", ...classList.slice(0,classList.length-2)]\n            setClasses(classList)\n            checkurl();\n            // setClassDoty(classResults)\n            // calculateDOTY(dotyResults, pax)\n        }\n\n        fetchData()\n        const interval = setInterval(async() => {\n            if (reloadCountDown <= 0){\n                fetchData()\n                reloadCountDown = 30;\n                setNextRefresh(30);\n            } else {\n                \n                setNextRefresh(reloadCountDown - 1 );\n                reloadCountDown = reloadCountDown - 1;\n\n            }\n            \n        }, 1000);\n        return () => clearInterval(interval);\n        \n\n        // return setInterval(async ()=> await fetchData(),30000)\n\n    },[]);\n\n    const reLoadNow = () => {\n        reloadCountDown = 0;\n    }\n    \n    window.onpopstate = e => checkurl();\n    let showHideTourText = showTour ? \"Hide Tour\" : \"Show Tour\";\n    let timeNeeded = topPax / paxMap[dropdown.toLowerCase()]\n\n    return (\n        <React.Fragment>\n            {data && classes && dropdown && !showDoty && !showClassDoty &&\n                <div>\n                    <DriverModal />\n                    <span><Dropdown clazzes={classes} /></span>\n                    \n                    <span ><button style={{float:\"right\", margin:\".5em\", height:\"45px\", display: \"none\"}} onClick={()=>setShowTour(!showTour)}>{showHideTourText} <Cone style={{height:\"23px\"}}/></button></span>\n                    <br/>\n\n                    \n                    \n                    {/* {dropdown !== 'PAX' && dropdown !== 'RAW'\n                        ?\n                            <div>\n                                <a style={{float:\"right\", paddingRight:\"1em\", paddingTop:\"1em\"}} onClick={()=>{setShowClassDoty(true)}}href=\"#\">Class DOTY</a>  \n                                <br/>\n                                <div>Time needed to match top PAX: {(topPax/paxMap[dropdown]).toFixed(3) }</div>\n                            </div>\n                        :\n                            <div>\n                                <a style={{float:\"right\", paddingRight:\"1em\", paddingTop:\"1em\"}} onClick={()=>{setShowDoty(true)}}href=\"#\">Show Live DOTY</a>  \n                                <br/>\n                                <div>Number of runs: {runCount} </div>\n                                <div>Cones hit: {conesHit}</div>\n                            </div>\n                    } */}\n                    {dropdown && dropdown === 'N' && showTour && \n                        <TourTable class=\"col\" data={getPax([data[dropdown]])} name={dropdown} topPax={topPax} showTour={showTour}/>\n                    }\n                    {dropdown && dropdown === 'N' && !showTour &&\n                        <AutoXTable class=\"col\" data={getPax([data[dropdown]])} name={dropdown} topPax={topPax} showTour={showTour}/>\n                    }\n            \n                    {dropdown && dropdown !== 'N' && showTour && \n                        <TourTable class=\"col\" data={data[dropdown]} name={dropdown} topPax={topPax} showTour={showTour} timeNeeded={timeNeeded} />\n                    }\n                    {dropdown && dropdown !== 'N' && !showTour &&\n                        <AutoXTable class=\"col\" data={data[dropdown]} name={dropdown} topPax={topPax} showTour={showTour} timeNeeded={timeNeeded} />\n                    }\n\n                </div>\n            }\n\n            {/* {data && classes && dropdown && showDoty && dotyData &&\n                <DotyTable data={dotyData} onClose={()=>{setShowDoty(false)}} topPax={topPax} paxMap={paxMap}></DotyTable>\n            }\n            { data && classes && dropdown && showClassDoty && classDoty &&\n                <ClassDotyTable data={classDoty[dropdown]} onClose={()=>{setShowClassDoty(false)}} currentClassData={data[dropdown]}></ClassDotyTable>\n            } */}\n\n\n        </React.Fragment>\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {LiveTiming} from './LiveTiming';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './context/context'\nimport { reducer } from './context/reducer'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={{selected:null, dropdown: \"PAX\"}} reducer={reducer} >\n      <LiveTiming />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const reducer = (state, action) => {\n  switch (action.type) {\n    case 'SELECTED_DRIVER':\n        return {...state, selected: action.data };\n    case 'DESELECT_DRIVER':\n        return {...state, selected: null };\n    case 'UPDATE_DROPDOWN':\n        return {...state, dropdown: action.data }\n    case 'RUNS_AND_CONES':\n        return {...state, conesHit: action.data.conesHit, runCount: action.data.runCount, maxRuns: action.data.maxRuns, lastMod: action.data.lastMod}\n    default:\n        return state;\n  }\n};"],"sourceRoot":""}